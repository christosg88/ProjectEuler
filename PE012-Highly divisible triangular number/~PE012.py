# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?

from math import floor
def sieve(limit):
    sievebound = (limit-1)/2
    crosslimit = (int(floor(limit**0.5))-1)/2
    sieve = [False for x in xrange(0, sievebound+1)]
    for i in xrange(1,crosslimit+1):
        if not sieve[i]:
            for j in xrange(2*i*(i+1),sievebound+1,(2*i)+1):
                sieve[j] = True
    final = [2]
    for i in xrange(1,sievebound+1):
        if not sieve[i]:
            final.append(2*i+1)
    return final

n=3 # start with a prime
Dn=2 # number of divisors for any prime
cnt=0 # to insure the while loop is entered
P = 10000
primearray=sieve(P)
while cnt <= 500:
	n += 1
	n1 = n
	if n1 % 2 == 0:
		n1 /= 2
	Dn1 = 1
	for prime in primearray:
		if prime**2 > n1:
			Dn1 *= 2
			break
		exponent=1
		while n1 % prime == 0:
			exponent += 1
			n1 /= prime
		if exponent > 1:
			Dn1 *= exponent
		if n1 == 1:
			break
	cnt = Dn*Dn1 
	Dn = Dn1 
print n*(n-1)/2 